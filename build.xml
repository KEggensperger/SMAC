<?xml version="1.0"?>
<project name="SMAC" default="compile">
	<description>
		Sequential Model-based Automatic Configurator
	</description>
	<property name="private.buildfile" value="build-resources/private/user-antbuild.properties"/>
	<property file="${private.buildfile}"/>
	<property file="build-resources/antbuild.properties"/>
	<fail message="No Software Directory specified, a private build file should exist in ${private.buildfile} this should specify at the very least 'software.dir'">
		<condition>
			<not>
					<isset property="software.dir"/>
			</not>
		</condition>
	</fail>
	
	
	
	<!--<property name="software.dir" value="/ubc/cs/home/s/seramage/arrowspace/software/"/>-->

	<path id="compile.classpath">
		<fileset dir="lib" id="lib">
			<include name="*.jar"/>
		</fileset>
		<!--<fileset dir="${software.dir}/fastrf/" id="fastrf">
			<include name="fastrf.jar"/>
		</fileset>-->
		<fileset dir="${software.dir}/aclib/" id="aclib">
			<include name="*.jar"/>
		</fileset>
	</path>	
	
	<target name="init" description="Initialize the project directories"> 
		<mkdir dir="build/classes/"/>
		<mkdir dir="dist"/>
	</target>
	<target name="clean">
		<delete dir="build"/>
		<delete dir="dist"/>
	</target>
	<target name="compile" depends="init">
		<javac srcdir="src" destdir="build/classes">
		<classpath refid="compile.classpath"/>
		</javac>
	</target>
	<target name="archive" depends="compile">
		<jar destfile="dist/smac.jar" basedir="build/classes"/>
		<buildnumber file="/ubc/cs/project/arrow/seramage/software/build-numbers/buildnumber-${ant.project.name}"/>
		<property name="outputfilename" value="smac-v${version.major}.${version.minor}${version.beta}-${build.number}"/>
		<copy todir="dist/" force="true">
			<fileset dir="deployables">
				<include name="*"/>
				<include name="**/"/>
			</fileset>
			<fileset dir="">
				<include name="conf/**"/>
				<exclude name="${lastdeployfile}"/>
				<include name="doc/**"/>
			</fileset>
			<fileset refid="lib"/>
			<!--<fileset refid="fastrf"/>-->
			<fileset refid="aclib"/>
			<fileset dir="scripts">
				<include name="*"/>
			</fileset>	
			
		</copy>
		<echo>I am probably copying the lastdeployfile as well, this should be fixed one day :)</echo>
		<chmod perm="750">
			<fileset dir="dist/">
				<include name="smac"/>
				<include name="smac-possible-restores"/>
				<include name="smac-validate"/>
				<include name="example_saps/ubcsat"/>
				<include name="example_spear/Spear-32_1.2.1"/>
			</fileset>
		</chmod>
	</target>	
	
	<target name="zip" depends="archive">
		<!--<zip destFile="${software.dir}/${outputfilename}.zip" >
			<mappedresources>
			<fileset dir="dist/" includes="**/*"/>
				<globmapper from="*" to="${outputfilename}/*"/>
			</mappedresources>
		</zip>-->
		<tar destFile="${software.dir}/${outputfilename}.tar.gz" longfile="gnu" compression="gzip">
					<tarfileset dir="dist/" filemode="640" dirmode="750" prefix="${outputfilename}/">
						<include name="**/*"/>
						<exclude name="${lastdeployfile}"/> <!--The previous exclude didn't work so maybe try here-->
						<exclude name="smac"/>
						<exclude name="smac-possible-restores"/>
						<exclude name="smac-validate"/>
						<exclude name="example_saps/ubcsat"/>
						<exclude name="example_spear/Spear-32_1.2.1"/>
					</tarfileset>
					<tarfileset dir="dist/" filemode="750" prefix="${outputfilename}/">
						<include name="smac"/>
						<include name="smac-possible-restores"/>
						<include name="smac-validate"/>
						<include name="example_saps/ubcsat*"/>
						<include name="example_spear/Spear-32_1.2.1*"/>
					</tarfileset>
		</tar>
	</target>
	<target name="deploy-release" depends="archive">
		<!--
		<mkdir dir="${deploy.dir}"/>
		<copy todir="${deploy.dir}" force="true">
			<fileset dir="dist/">
				<include name="**/"/>
			</fileset>
		</copy>
		<chmod perm="444">
				<fileset dir="${deploy.dir}">
						<include name="*"/>
				</fileset>
		</chmod>
		<chmod perm="555">
				<fileset dir="${deploy.dir}">
						<include name="smac"/>
						<include name="smac-possible-restores"/>
				</fileset>
		</chmod>-->
		<!-- Does not preserve permissions -->
		<!--<untar src="${software.dir}/smac-v${version.major}.${version.minor}${version.beta}.${build.number}.tar.gz" dest="${software.dir}" failOnEmptyArchive="true" compression="gzip"/> -->
		<exec executable="tar" dir="${software.dir}" failonerror="true">
			<arg value="-xzf"/>
			<arg value="${software.dir}/${outputfilename}.tar.gz"/>
		</exec>
		
		<echo file="${lastdeployfile}" append="false">${software.dir}/${outputfilename}</echo>
			
		<symlink link="${deploy.dir}" overwrite="true" resource="${software.dir}/smac-v${version.major}.${version.minor}${version.beta}-${build.number}" failonerror="false"/>
		<echo>Untar Successful to ${software.dir}/${outputfilename}</echo>
	</target>
	<target name="deploy" depends="zip, deploy-release"/>
	<!--
	<target name="deploy-wg" depends="archive">
			
			<mkdir dir="${deploy-wg.dir}"/>
			<chmod perm="666">
				<fileset dir="${deploy-wg.dir}">
										<include name="*"/>
								</fileset>
			</chmod>
			<copy todir="${deploy-wg.dir}" force="true">
				<fileset dir="dist/">
					<include name="*"/>
				</fileset>
			</copy>
			<chmod perm="444">
					<fileset dir="${deploy-wg.dir}">
							<include name="*"/>
					</fileset>
			</chmod>
			<chmod perm="555">
					<fileset dir="${deploy-wg.dir}">
							<include name="*.sh"/>
					</fileset>
			</chmod>
		</target>
-->
	
	
</project>
